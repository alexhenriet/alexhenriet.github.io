<h1 id="defined">defined</h1>

<p>return the first argument that is <code>!== undefined</code></p>

<p><a href="http://ci.testling.com/substack/defined"><img src="http://ci.testling.com/substack/defined.png" alt="browser support" /></a></p>

<p><a href="http://travis-ci.org/substack/defined"><img src="https://secure.travis-ci.org/substack/defined.png" alt="build status" /></a></p>

<p>Most of the time when I chain together <code>||</code>s, I actually just want the first
item that is not <code>undefined</code>, not the first non-falsy item.</p>

<p>This module is like the defined-or (<code>//</code>) operator in perl 5.10+.</p>

<h1 id="example">example</h1>

<pre><code class="js">var defined = require('defined');
var opts = { y : false, w : 4 };
var x = defined(opts.x, opts.y, opts.w, 100);
console.log(x);
</code></pre>

<pre><code>$ node example/defined.js
false
</code></pre>

<p>The return value is <code>false</code> because <code>false</code> is the first item that is
<code>!== undefined</code>.</p>

<h1 id="methods">methods</h1>

<pre><code class="js">var defined = require('defined')
</code></pre>

<h2 id="var-x-%3D-defineda%2C-b%2C-c...">var x = defined(a, b, c...)</h2>

<p>Return the first item in the argument list <code>a, b, c...</code> that is <code>!== undefined</code>.</p>

<p>If all the items are <code>=== undefined</code>, return undefined.</p>

<h1 id="install">install</h1>

<p>With <a href="https://npmjs.org">npm</a> do:</p>

<pre><code>npm install defined
</code></pre>

<h1 id="license">license</h1>

<p>MIT</p>
